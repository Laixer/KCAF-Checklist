# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

env:
  NODEJS_VERSION: '14.x'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODEJS_VERSION }}
    - run: npm install
    - run: npm run-script build

  deploy:
    name: Deploy
    env:
      DEPLOY_NAME: portal-kcaf
      ARCHIVE: portal-kcaf.${{ github.sha }}.tar.gz

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [build]

    steps:
    - uses: actions/checkout@v2
      
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODEJS_VERSION }}

    - run: npm install
    - run: npm run build

    - name: Package version
      run: |
        git describe --long --always > dist/VERSION
        git rev-parse HEAD > dist/COMMIT

    - name: Create archive
      run: tar -czf ${{ env.ARCHIVE }} -C dist .

    - name: Copy archive via scp
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        source: ${{ env.ARCHIVE }}
        target: '/var/cache/deployment/tmp'
   
    - name: Running deploy script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          mv /var/cache/deployment/current/${{ env.DEPLOY_NAME }}.*.tar.gz /var/cache/deployment/previous/
          mv /var/cache/deployment/tmp/${{ env.ARCHIVE }} /var/cache/deployment/current/
          /var/cache/deployment/deploy.sh ${{ env.DEPLOY_NAME }}
          rm -f $(ls -1t /var/cache/deployment/previous/${{ env.DEPLOY_NAME }}.*.tar.gz | tail -n +5)
